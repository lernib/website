---
name: Deploy
on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json

jobs:
  build:
    name: Build Application
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
        role-session-name: myGithubActions
    - name: Install NodeJS 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install dependencies
      run: npm ci
    - name: Build SvelteKit
      run: npm run build
    - name: Remove old artifacts
      run: aws s3 rm s3://${{ secrets.AWS_BUCKET_NAME }}/artifacts/ --recursive
    - name: Copy build artifacts to S3
      run: aws s3 cp build s3://${{ secrets.AWS_BUCKET_NAME }}/artifacts/build/ --recursive
    - name: Copy static assets to S3
      run: aws s3 cp static s3://${{ secrets.AWS_BUCKET_NAME }}/static/ --recursive
    - name: Copy package.json to S3
      run: aws s3 cp package.json s3://${{ secrets.AWS_BUCKET_NAME }}/artifacts/package.json

  deploy:
    name: Deploy to AWS
    needs: build
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: myGithubActions
      - run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=`git rev-parse HEAD`
          aws deploy create-deployment --application-name "LernibDeploy-Website" --deployment-group-name "LernibDeployGroup-Website" --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures